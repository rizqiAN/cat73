/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Java.ListRandom;
import Java.koneksi;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class Master_Customer extends javax.swing.JFrame {

    private Java.koneksi koneksi;
    private Connection con;
    private ResultSet hasil;
    private Statement stat;
    DefaultTableModel tabel_model;
    private int id_status;
    private String bool;
    private String kode, nama, contact, telepon,wilayah, alamat;
    
    public Master_Customer() {
        initComponents();
        this.setLocationRelativeTo(null);
        buatTabel();
        bool = "false";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        fCari = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane7 = new javax.swing.JScrollPane();
        fTabel = new javax.swing.JTable();
        fCheck = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        fNew = new javax.swing.JLabel();
        fEdit = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        fDelete = new javax.swing.JLabel();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Kriteria");

        fCari.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        fCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fCariMouseClicked(evt);
            }
        });
        fCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fCariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fCariKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.lightGray));

        jLabel16.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("DAFTAR CUSTOMER");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(jLabel16)
                .addGap(3, 3, 3))
        );

        jSeparator2.setForeground(new java.awt.Color(153, 153, 153));

        fTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama", "Contact", "Telepon", "Wilayah", "Alamat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fTabelMouseClicked(evt);
            }
        });
        fTabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fTabelKeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(fTabel);

        fCheck.setText("Tampilkan Customer Deactive");
        fCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fCheckMouseClicked(evt);
            }
        });
        fCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fCheckActionPerformed(evt);
            }
        });
        fCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fCheckKeyPressed(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator4.setForeground(new java.awt.Color(153, 153, 153));

        fNew.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_manilla-folder-new_23456.png"))); // NOI18N
        fNew.setText("F2-New");
        fNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fNewMouseClicked(evt);
            }
        });
        fNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fNewKeyPressed(evt);
            }
        });

        fEdit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_gtk-edit_20500.png"))); // NOI18N
        fEdit.setText("F3-Edit");
        fEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fEditMouseClicked(evt);
            }
        });
        fEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fEditKeyPressed(evt);
            }
        });

        jSeparator5.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator6.setForeground(new java.awt.Color(153, 153, 153));
        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        fDelete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        fDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/cancel (3).png"))); // NOI18N
        fDelete.setText("F5-Delete");
        fDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fDeleteMouseClicked(evt);
            }
        });
        fDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fDeleteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fCheck)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(fNew, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(fEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(fCheck)
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fCariMouseClicked
        //       Penjualan_Penjualan_Pilihcustomer pppc = new Penjualan_Penjualan_Pilihcustomer();
        //       pppc.setVisible(true);
        //       pppc.setFocusable(true);
    }//GEN-LAST:event_fCariMouseClicked

    private void fNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fNewMouseClicked
        ambilDataTabel();
        ListRandom list = new ListRandom();
        list.setKode_customer("new");
        Master_Customer_NewEdit x= new Master_Customer_NewEdit();
        x.setVisible(true);
        x.setLocationRelativeTo(null);
    }//GEN-LAST:event_fNewMouseClicked

    private void fEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fEditMouseClicked
        ambilDataTabel();
        if("true".equals(bool)){
            ListRandom list = new ListRandom();
            list.setKode_customer(kode);
            Master_Customer_NewEdit x= new Master_Customer_NewEdit();
            x.setVisible(true);
            x.setLocationRelativeTo(null);            
        }else{
            JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
        }
        
    }//GEN-LAST:event_fEditMouseClicked

    private void fTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fTabelMouseClicked
        if (evt.getClickCount() == 1){
            bool ="true";
        }
        if (evt.getClickCount() == 2){
           Master_Customer_KartuPiutang mckp = new Master_Customer_KartuPiutang();
           mckp.setVisible(true);
           mckp.setFocusable(true);
        }
        
    }//GEN-LAST:event_fTabelMouseClicked

    private void fDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fDeleteMouseClicked
        ambilDataTabel();
        try{
            int Pilih = JOptionPane.showConfirmDialog(null,"Yakin ingin menghapus data ini?","Konfirmasi Hapus",JOptionPane.OK_CANCEL_OPTION);
            if(Pilih == JOptionPane.OK_OPTION) {
                koneksi = new koneksi();
                String sql="delete from customer where kode_customer='"+kode+"'";
                koneksi.simpanData(sql);
                koneksi.tutupKoneksi(hasil);
                JOptionPane.showMessageDialog(null, "Data Berhasil di Hapus");
            }else if(Pilih == JOptionPane.CANCEL_OPTION){
            }
            
        }catch(Exception e){
            System.out.println("Delete : "+e);
        }
        
        
       
    }//GEN-LAST:event_fDeleteMouseClicked

    private void fCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyReleased
            System.out.println("a");
            if(fCheck.isSelected() == true){
                System.out.println("0");
                id_status = 0;
                hapusTabel();
                cari();
            }
            
            if(fCheck.isSelected()==false){
                    System.out.println("1");
                    id_status = 1;
                    hapusTabel();
                    cari();
            }
        
            
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {     
                fTabel.requestFocusInWindow();
            }
            
    }//GEN-LAST:event_fCariKeyReleased

    private void fCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fCheckMouseClicked
        
    }//GEN-LAST:event_fCheckMouseClicked

    private void fCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fCheckActionPerformed
        hapusTabel();
        tampil();
    }//GEN-LAST:event_fCheckActionPerformed

    private void fCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_F2) {
            ambilDataTabel();
            ListRandom list = new ListRandom();
            list.setKode_customer("new");
            
            hapusTabel();
            buatTabel();
            
            Master_Customer_NewEdit x= new Master_Customer_NewEdit();
            x.setVisible(true);
            x.setLocationRelativeTo(null);
        }
        if (evt.getKeyCode()==KeyEvent.VK_F3) {
            ambilDataTabel();
            if("true".equals(bool)){
                ListRandom list = new ListRandom();
                list.setKode_customer(kode);
                Master_Customer_NewEdit x= new Master_Customer_NewEdit();
                x.setVisible(true);
                x.setLocationRelativeTo(null);            
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fCariKeyPressed

    private void fNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fNewKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fNewKeyPressed

    private void fEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fEditKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fEditKeyPressed

    private void fDeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fDeleteKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fDeleteKeyPressed

    private void fCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCheckKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
        if (evt.getKeyCode()==KeyEvent.VK_F2) {
            ambilDataTabel();
            ListRandom list = new ListRandom();
            list.setKode_customer("new");
            
            hapusTabel();
            buatTabel();
            
            Master_Customer_NewEdit x= new Master_Customer_NewEdit();
            x.setVisible(true);
            x.setLocationRelativeTo(null);
        }

    }//GEN-LAST:event_fCheckKeyPressed

    private void fTabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fTabelKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
        if (evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP) {
            bool="true";
        }
        if (evt.getKeyCode()==KeyEvent.VK_F2) {
            ambilDataTabel();
            ListRandom list = new ListRandom();
            list.setKode_customer("new");
            
            hapusTabel();
            buatTabel();
            
            Master_Customer_NewEdit x= new Master_Customer_NewEdit();
            x.setVisible(true);
            x.setLocationRelativeTo(null);
        }
        if (evt.getKeyCode()==KeyEvent.VK_F3) {
            ambilDataTabel();
            if("true".equals(bool)){
                ListRandom list = new ListRandom();
                list.setKode_customer(kode);
                Master_Customer_NewEdit x= new Master_Customer_NewEdit();
                x.setVisible(true);
                x.setLocationRelativeTo(null);            
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }

    }//GEN-LAST:event_fTabelKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Master_Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Master_Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Master_Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Master_Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Master_Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fCari;
    private javax.swing.JCheckBox fCheck;
    private javax.swing.JLabel fDelete;
    private javax.swing.JLabel fEdit;
    private javax.swing.JLabel fNew;
    private javax.swing.JTable fTabel;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    // End of variables declaration//GEN-END:variables

    private void buatTabel(){
        tabel_model = new DefaultTableModel();
        tabel_model.addColumn("Kode");
        tabel_model.addColumn("Nama");
        tabel_model.addColumn("Contact");
        tabel_model.addColumn("Telepon");
        tabel_model.addColumn("Wilayah");
        tabel_model.addColumn("Alamat");
        fTabel.setModel(tabel_model);
        //Untuk mengatur lebar kolom
        fTabel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fTabel.getColumnModel().getColumn(0).setPreferredWidth(80);
        fTabel.getColumnModel().getColumn(1).setPreferredWidth(300); 
        fTabel.getColumnModel().getColumn(2).setPreferredWidth(180); 
        fTabel.getColumnModel().getColumn(3).setPreferredWidth(250); 
        fTabel.getColumnModel().getColumn(4).setPreferredWidth(180); 
        fTabel.getColumnModel().getColumn(5).setPreferredWidth(300); 
        fTabel.getColumnModel().getColumn(0).setMinWidth(80);
        fTabel.getColumnModel().getColumn(1).setMinWidth(300); 
        fTabel.getColumnModel().getColumn(2).setMinWidth(180); 
        fTabel.getColumnModel().getColumn(3).setMinWidth(250); 
        fTabel.getColumnModel().getColumn(4).setMinWidth(180); 
        fTabel.getColumnModel().getColumn(5).setMinWidth(300); 
        tampil();
    }
    
    private void tampil(){
       if(fCheck.isSelected() == true){
           id_status = 0;
       }else{
           id_status = 1;
       }
       try {
            System.out.println(id_status);
            String query ="SELECT customer.kode_customer, customer.nama_customer, customer.contact_customer, customer.telepon_customer, wilayah.nama_wilayah, customer.alamat_customer, SUBSTRING(customer.kode_customer,1,2) * 1 AS URUT FROM customer, wilayah WHERE wilayah.kode_wilayah = customer.id_wilayah and status_customer = '"+id_status+"' and customer.kode_customer ORDER BY URUT ASC";
            System.out.println("///");
            koneksi = new koneksi();
            con = (Connection) koneksi.Connect();
            hasil = koneksi.ambilData(query);
            String Object[] = new String[5];
             System.out.println("///");
             while (hasil.next()){
                     tabel_model.addRow(new Object[] {hasil.getString(1),hasil.getString(2),hasil.getString(3),hasil.getString(4),hasil.getString(5),hasil.getString(6)});

             }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            System.out.println(e);
        }
    }
    
    private void hapusTabel(){
        int row = tabel_model.getRowCount();
        for (int i=0; i<row; i++){
            tabel_model.removeRow(0);
        }
    }
     private void hapusTabelAtas(){
        int row = tabel_model.getRowCount();
        for (int i=0; i<row-1; i++){
            tabel_model.removeRow(0);
        }
    }
    
     private void ambilDataTabel(){
        int row= fTabel.getSelectedRow();
        if("true".equals(bool)){
            kode  = (String) fTabel.getValueAt(row, 0);
            nama = ((String)fTabel.getValueAt(row, 1));
            contact = ((String)fTabel.getValueAt(row, 2));
            telepon = ((String)fTabel.getValueAt(row, 3));
            wilayah = ((String) fTabel.getValueAt(row, 4));
            alamat = ((String) fTabel.getValueAt(row, 5));
            bool="true";
        }else{
            kode="0";
        }
    }
     
     private void cari(){
            hapusTabel();
            String query= "SELECT customer.kode_customer, customer.nama_customer, customer.contact_customer, "
                        + "customer.telepon_customer, wilayah.nama_wilayah, customer.alamat_customer "
                        + "FROM customer INNER JOIN wilayah ON customer.id_wilayah = wilayah.kode_wilayah WHERE customer.status_customer = '"+id_status+"' and "
                        + "customer.nama_customer like '%"+fCari.getText()+"%' or wilayah.nama_wilayah like '%"+fCari.getText()+"%'";
            con = (Connection) koneksi.Connect();
            hasil = koneksi.ambilData(query);
            String Object[] = new String[5];
            System.out.println("///");
            try {
                while (hasil.next()){
                    tabel_model.addRow(new Object[] {hasil.getString(1),hasil.getString(2),hasil.getString(3),hasil.getString(4),hasil.getString(5), hasil.getString(6)});

                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
     }
}
