/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Java.ListRandom;
import Java.koneksi;
import com.mysql.jdbc.Connection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 7
 */
public class Master_Salesman extends javax.swing.JFrame {

    private Java.koneksi koneksi;
    private Connection con;
    private ResultSet hasil;
    private Statement stat;
    DefaultTableModel tabel_model;
    private int combo;
    private String query;
    private String kode;
    private String nama;
    private String contact;
    private String alamat;
    private String telepon, kota,status;
    private String bool;
    public String alih;
    private Java.ListRandom list;
    
    public Master_Salesman() {
        initComponents();
        this.setLocationRelativeTo(null);
        buatTabel();
        TampilByCombo();
        fLogin.hide();
        bool = "false";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        fEdit = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        fTabel = new javax.swing.JTable();
        fStatus = new javax.swing.JButton();
        fCombo = new javax.swing.JComboBox<>();
        fTambah = new javax.swing.JButton();
        fLogin = new javax.swing.JButton();
        fCari = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();

        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        fEdit.setBackground(new java.awt.Color(71, 166, 227));
        fEdit.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_gtk-edit_20500.png"))); // NOI18N
        fEdit.setText("Edit");
        fEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fEditActionPerformed(evt);
            }
        });
        fEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fEditKeyPressed(evt);
            }
        });

        fTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama", "Contact", "Telepon", "Alamat", "Kota"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fTabel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fTabelMouseClicked(evt);
            }
        });
        fTabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fTabelKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(fTabel);

        fStatus.setBackground(new java.awt.Color(85, 222, 93));
        fStatus.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fStatus.setText("Aktif");
        fStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fStatusActionPerformed(evt);
            }
        });
        fStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fStatusKeyPressed(evt);
            }
        });

        fCombo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tidak Aktif", "Aktif", "Semua" }));
        fCombo.setSelectedIndex(1);
        fCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fComboActionPerformed(evt);
            }
        });
        fCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fComboKeyPressed(evt);
            }
        });

        fTambah.setBackground(new java.awt.Color(71, 166, 227));
        fTambah.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_manilla-folder-new_23456.png"))); // NOI18N
        fTambah.setText("Tambah Salesman");
        fTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTambahActionPerformed(evt);
            }
        });
        fTambah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fTambahKeyPressed(evt);
            }
        });

        fLogin.setBackground(new java.awt.Color(71, 166, 227));
        fLogin.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        fLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/user.png"))); // NOI18N
        fLogin.setText("Login");
        fLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fLoginActionPerformed(evt);
            }
        });
        fLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fLoginKeyPressed(evt);
            }
        });

        fCari.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cari", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        fCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fCariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fCariKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fLogin)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel45.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(49, 112, 143));
        jLabel45.setText("Salesman Form");

        jLabel47.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(49, 112, 143));
        jLabel47.setText("waktu");

        jLabel46.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(49, 112, 143));
        jLabel46.setText("tanggal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel46)
                .addGap(57, 57, 57)
                .addComponent(jLabel47)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel46)
                        .addComponent(jLabel47)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(832, 502));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fEditActionPerformed
        if("true".equals(bool)){
           ambilDataTabel();
           list = new ListRandom();
           list.setTombol_salesman("edit");
           list.setKode_salesman(kode);
           System.out.println("fEdit");
           Master_Salesman_TambahSalesman ts=new Master_Salesman_TambahSalesman();
           ts.setVisible(true);
           ts.setFocusable(true);
           ts.fNama.setText(nama);
           ts.fAlamat.setText(alamat);
           ts.fKota.setText(kota);
           ts.fTelepon.setText(telepon);
           ts.fContact.setText(contact);
          
        }else{
            JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
        }
        
    }//GEN-LAST:event_fEditActionPerformed

    private void fTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTambahActionPerformed
        list = new ListRandom();
        list.setTombol_salesman("tambah");
        Master_Salesman_TambahSalesman ts=new Master_Salesman_TambahSalesman();
        ts.setVisible(true);
        ts.setFocusable(true);
    }//GEN-LAST:event_fTambahActionPerformed

    private void fLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fLoginActionPerformed
        Master_Login log=new Master_Login();
        log.setVisible(true);
    }//GEN-LAST:event_fLoginActionPerformed

    private void fCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyReleased
        try{
            combo = fCombo.getSelectedIndex();
            
            if(combo != 2){
                hapusTabel();
                query=" SELECT kode_salesman, nama_salesman, contact_salesman, "
                        + "telepon_salesman, alamat, kota_salesman, SUBSTRING(kode_salesman,1,4) "
                        + "* 1 AS URUT FROM salesman WHERE aktif_sales = '"+combo+"' and nama_salesman like '%"+fCari.getText()+"%' "
                        + "or kode_salesman like '%"+fCari.getText()+"%' "
                        + "or contact_salesman like '%"+fCari.getText()+"%' "
                        + "or telepon_salesman like '%"+fCari.getText()+"%' "
                        + "or alamat like '%"+fCari.getText()+"%' "
                       + "or kota_salesman like '%"+fCari.getText()+"%' ORDER BY URUT ASC";
                con = (Connection) koneksi.Connect();
                hasil = koneksi.ambilData(query);
                String Object[] = new String[5];
                System.out.println("///");
                while (hasil.next()){
                        tabel_model.addRow(new Object[] {hasil.getString(1),
                                            hasil.getString(2),hasil.getString(3),
                                            hasil.getString(4),hasil.getString(5),
                                            hasil.getString(6)});
                }
            }else{
                hapusTabel();
                String sql=" SELECT kode_salesman, nama_salesman, contact_salesman, "
                        + "telepon_salesman, alamat, kota_salesman, SUBSTRING(kode_salesman,1,4) "
                        + "* 1 AS URUT FROM salesman WHERE nama_salesman like '%"+fCari.getText()+"%' "
                        + "or kode_salesman like '%"+fCari.getText()+"%' "
                        + "or contact_salesman like '%"+fCari.getText()+"%' "
                        + "or telepon_salesman like '%"+fCari.getText()+"%' "
                        + "or alamat like '%"+fCari.getText()+"%' "
                        + "or kota_salesman like '%"+fCari.getText()+"%' ORDER BY URUT ASC";
                con = (Connection) koneksi.Connect();
                hasil = koneksi.ambilData(query);
                String Object[] = new String[5];
                System.out.println("///");
                while (hasil.next()){
                        tabel_model.addRow(new Object[] {hasil.getString(1),
                                            hasil.getString(2),hasil.getString(3),
                                            hasil.getString(4),hasil.getString(5),
                                            hasil.getString(6)});
                }
            }
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {     
                fTabel.requestFocusInWindow();
            }
            }catch (Exception e) {
        }
    }//GEN-LAST:event_fCariKeyReleased

    private void fComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fComboActionPerformed
        TampilByCombo();
    }//GEN-LAST:event_fComboActionPerformed

    private void fTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fTabelMouseClicked
        if (evt.getClickCount() == 1){
            StatusKlikTabel();
            bool ="true";
        }
    }//GEN-LAST:event_fTabelMouseClicked

    private void fStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fStatusActionPerformed
       ubahStatus();
       hapusTabel();
       buatTabel();
       TampilByCombo();
    }//GEN-LAST:event_fStatusActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_formKeyPressed

    private void fTambahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fTambahKeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fTambahKeyPressed

    private void fComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fComboKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fComboKeyPressed

    private void fStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fStatusKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fStatusKeyPressed

    private void fCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fCariKeyPressed

    private void fEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fEditKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fEditKeyPressed

    private void fLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fLoginKeyPressed
       if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fLoginKeyPressed

    private void fTabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fTabelKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            if("true".equals(bool)){
                ambilDataTabel();
                list = new ListRandom();
                list.setTombol_salesman("edit");
                list.setKode_salesman(kode);
                System.out.println("fEdit");
                Master_Salesman_TambahSalesman ts=new Master_Salesman_TambahSalesman();
                ts.setVisible(true);
                ts.setFocusable(true);
                ts.fNama.setText(nama);
                ts.fAlamat.setText(alamat);
                ts.fKota.setText(kota);
                ts.fTelepon.setText(telepon);
                ts.fContact.setText(contact);

             }else{
                 JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
             }
        }
    }//GEN-LAST:event_fTabelKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
      hapusTabel();
      buatTabel();
      TampilByCombo();
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Master_Salesman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Master_Salesman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Master_Salesman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Master_Salesman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Master_Salesman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fCari;
    private javax.swing.JComboBox<String> fCombo;
    private javax.swing.JButton fEdit;
    private javax.swing.JButton fLogin;
    private javax.swing.JButton fStatus;
    private javax.swing.JTable fTabel;
    private javax.swing.JButton fTambah;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane10;
    // End of variables declaration//GEN-END:variables

    private void buatTabel(){
         tabel_model = new DefaultTableModel();
         tabel_model.addColumn("Kode");
         tabel_model.addColumn("Nama");
         tabel_model.addColumn("Contact");
         tabel_model.addColumn("Telepon");
         tabel_model.addColumn("Alamat");
         tabel_model.addColumn("Kota");
         fTabel.setModel(tabel_model);
         //Untuk mengatur lebar kolom
         fTabel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
         fTabel.getColumnModel().getColumn(0).setPreferredWidth(80);
         fTabel.getColumnModel().getColumn(1).setPreferredWidth(150); 
         fTabel.getColumnModel().getColumn(2).setPreferredWidth(150); 
         fTabel.getColumnModel().getColumn(3).setPreferredWidth(180); 
         fTabel.getColumnModel().getColumn(4).setPreferredWidth(400); 
         fTabel.getColumnModel().getColumn(5).setPreferredWidth(130); 
         fTabel.getColumnModel().getColumn(0).setMinWidth(50);
         fTabel.getColumnModel().getColumn(1).setMinWidth(150); 
         fTabel.getColumnModel().getColumn(2).setMinWidth(150); 
         fTabel.getColumnModel().getColumn(3).setMinWidth(180); 
         fTabel.getColumnModel().getColumn(4).setMinWidth(400); 
         fTabel.getColumnModel().getColumn(5).setMinWidth(130); 
         tampil();
     }

     private void tampil(){
        try {
             String query ="SELECT kode_salesman, nama_salesman, contact_salesman, "
                         + "telepon_salesman, alamat, kota_salesman, SUBSTRING(kode_salesman,1,4) "
                         + "* 1 AS URUT FROM salesman ORDER BY URUT ASC";
             System.out.println("///");
             koneksi = new koneksi();
             con = (Connection) koneksi.Connect();
             hasil = koneksi.ambilData(query);
             String Object[] = new String[5];
             System.out.println("///");
             while (hasil.next()){
                     tabel_model.addRow(new Object[] {hasil.getString(1),
                                         hasil.getString(2),hasil.getString(3),
                                         hasil.getString(4),hasil.getString(5),
                                         hasil.getString(6)});
             }
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
             System.out.println(e);
         }
     }
     
    private void hapusTabel(){
      int row = tabel_model.getRowCount();
      for (int i=0; i<row; i++){
          tabel_model.removeRow(0);
      }
    }
    
    private void TampilByCombo(){
        combo = fCombo.getSelectedIndex();
        try{
            if(combo < 2){
                if(combo == 0){
                    fStatus.setText("Tidak Aktif");
                }else{
                    fStatus.setText("Aktif");
                }
                hapusTabel();
                query="SELECT kode_salesman, nama_salesman, contact_salesman, "
                        + "telepon_salesman, alamat, kota_salesman, SUBSTRING(kode_salesman,1,4) "
                        + "* 1 AS URUT FROM salesman WHERE aktif_sales = '"+combo+"' ORDER BY URUT ASC";
                con = (Connection) koneksi.Connect();
                hasil = koneksi.ambilData(query);
                String Object[] = new String[5];
                System.out.println("///");
                while (hasil.next()){
                        tabel_model.addRow(new Object[] {hasil.getString(1),
                                            hasil.getString(2),hasil.getString(3),
                                            hasil.getString(4),hasil.getString(5),
                                            hasil.getString(6)});
                }
            }else{
                hapusTabel();
                if(combo > 1){
                    fStatus.setText("Aktif/Tidak");
                }
               tampil();
            }
        }catch(Exception e){
            System.out.println("error tampilByCombo");
        }
    }
    
    public void ambilDataTabel(){
        int row= fTabel.getSelectedRow();
        kode  = (String) fTabel.getValueAt(row, 0);
        nama = ((String)fTabel.getValueAt(row, 1));
        contact = (String) fTabel.getValueAt(row, 2);
        telepon = (String) fTabel.getValueAt(row, 3);
        alamat = (String) fTabel.getValueAt(row, 4);
        kota = (String) fTabel.getValueAt(row, 5);
        System.out.println("ida"+kode);
    }
    
    private void StatusKlikTabel(){
        ambilDataTabel();
        try{
        query="SELECT kode_salesman, nama_salesman, contact_salesman, "
                + "telepon_salesman, alamat, kota_salesman, aktif_sales FROM salesman WHERE kode_salesman = '"+kode+"'";
        con = (Connection) koneksi.Connect();
        hasil = koneksi.ambilData(query);
        System.out.println("///");
        while (hasil.next()){
            kode = hasil.getString(1);
            nama = hasil.getString(2);
            contact = hasil.getString(3);
            telepon = hasil.getString(4);
            alamat = hasil.getString(5);
            kota = hasil.getString(6);
            status = hasil.getString(7);
        }
        if("1".equals(status)){
          fStatus.setText("Aktif");  
        }else if("0".equals(status)){
          fStatus.setText("Tidak Aktif");
        }
        }catch(Exception e){
            System.out.println("StatusKlikTabel");
        }
    }
    
   private void ubahStatus(){
       try {
            StatusKlikTabel();
            if("1".equals(status)){
                fStatus.setText("Tidak Aktif");  
                status = "0";
            }else if("0".equals(status)){
                fStatus.setText("Aktif");
                status = "1";
            }
            
            String sql= "Update salesman set aktif_sales=? where kode_salesman=?" ;
            PreparedStatement p = (PreparedStatement) koneksi.Connect().prepareStatement(sql);
                p.setInt(1, Integer.parseInt(status));
                p.setString(2, kode);
                p.executeUpdate();

                
                System.out.print(p);
                JOptionPane.showMessageDialog(null,"Status Salesman sukses di edit");
        if("1".equals(status)){
          fStatus.setText("Aktif");  
        }else if("0".equals(status)){
          fStatus.setText("Tidak Aktif");
        }
        refresh();
        } catch (Exception e) {
            System.out.println(e);
        }
   }
   
   private void refresh(){
       TampilByCombo();
   }
}
